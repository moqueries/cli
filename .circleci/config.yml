version: 2.1

orbs:
  codecov: codecov/codecov@3.2.2

executors:
  go:
    docker:
    - image: cimg/go:1.18

jobs:
  build:

    environment:
      TEST_RESULTS: /tmp/test-results

    executor: go

    steps:
    - checkout
    - run: mkdir -p $TEST_RESULTS

    - run:
        name: Generate code

        command: |
          set -ux
          find . -name moq_\*.go -delete
          go build -o $GOPATH/bin/moqueries moqueries.org/cli
          export MOQ_BULK_STATE_FILE=$(mktemp --tmpdir= moq-XXXXXX)
          moqueries bulk-initialize
          go generate ./...
          MOQ_DEBUG=true moqueries bulk-finalize

    - run:
        name: Run tests

        command: |
          set -ux
          PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
          gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- \
            -race -covermode=atomic -coverprofile=coverage.out $PACKAGE_NAMES
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

    - run:
        name: Check generated code

        command: |
          set -ux
          # fail if working directory is dirty
          # Note: We check after Generate code *and* Run tests because some
          #   tests generate mocks too.
          git status --short
          if [[ -n $(git status --short) ]]; then
            echo "Working directory dirty"
            exit 1
          fi

    - codecov/upload

    - run:
        name: Run code linters

        command: |
          set -ux
          # Installs the latest version each time. This may impact build
          # repeatability but only mildly.
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | \
            sh -s -- -b $(go env GOPATH)/bin
          golangci-lint run

    - run:
        name: Check for dirty working directory

        command: |
          set -ux
          git status
          git diff
          [[ -z $(git status --short) ]] || (echo 'Untracked changes' && exit 1)

    - store_artifacts:
        path: /tmp/test-results
        destination: raw-test-output

    - store_test_results:
        path: /tmp/test-results

workflows:
  version: 2
  build-workflow:
    jobs:
    - build
