// Code generated by Moqueries - https://github.com/myshkin5/moqueries - DO NOT EDIT!

package demo_test

import "github.com/myshkin5/moqueries/demo"

// mockIsFavorite holds the state of a mock of the IsFavorite type
type mockIsFavorite struct {
	resultsByParams map[mockIsFavorite_params]mockIsFavorite_results
	params          chan mockIsFavorite_params
}

// mockIsFavorite_mock isolates the mock interface of the IsFavorite type
type mockIsFavorite_mock struct {
	mock *mockIsFavorite
}

// mockIsFavorite_recorder isolates the recorder interface of the IsFavorite type
type mockIsFavorite_recorder struct {
	mock *mockIsFavorite
}

// mockIsFavorite_params holds the params of the IsFavorite type
type mockIsFavorite_params struct{ n int }

// mockIsFavorite_results holds the results of the IsFavorite type
type mockIsFavorite_results struct {
	result1 bool
}

// mockIsFavorite_fnRecorder routes recorded function calls to the mockIsFavorite mock
type mockIsFavorite_fnRecorder struct {
	params mockIsFavorite_params
	mock   *mockIsFavorite
}

// newMockIsFavorite creates a new mock of the IsFavorite type
func newMockIsFavorite() *mockIsFavorite {
	return &mockIsFavorite{
		resultsByParams: map[mockIsFavorite_params]mockIsFavorite_results{},
		params:          make(chan mockIsFavorite_params, 100),
	}
}

// mock returns the mock implementation of the IsFavorite type
func (m *mockIsFavorite) mock() demo.IsFavorite {
	return func(n int) bool { mock := &mockIsFavorite_mock{mock: m}; return mock.fn(n) }
}

func (m *mockIsFavorite_mock) fn(n int) (result1 bool) {
	params := mockIsFavorite_params{
		n: n,
	}
	m.mock.params <- params
	results, ok := m.mock.resultsByParams[params]
	if ok {
		result1 = results.result1
	}
	return result1
}

func (m *mockIsFavorite) onCall(n int) *mockIsFavorite_fnRecorder {
	return &mockIsFavorite_fnRecorder{
		params: mockIsFavorite_params{
			n: n,
		},
		mock: m,
	}
}

func (r *mockIsFavorite_fnRecorder) ret(result1 bool) {
	r.mock.resultsByParams[r.params] = mockIsFavorite_results{
		result1: result1,
	}
}
