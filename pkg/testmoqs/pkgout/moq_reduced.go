// Code generated by Moqueries - https://moqueries.org - DO NOT EDIT.

package pkgout

import (
	"fmt"

	"moqueries.org/runtime/hash"
	"moqueries.org/runtime/impl"
	"moqueries.org/runtime/moq"
)

// The following type assertion assures that Reduced_reduced is mocked
// completely
var _ Reduced_reduced = (*MoqReduced_mock)(nil)

// Reduced_reduced is the fabricated implementation type of this mock (emitted
// when the original interface contains non-exported methods)
type Reduced_reduced interface {
	Usual(sParam string, bParam bool) (sResult string, err error)
	ReallyUnusualParams(struct{ a string })
	ReallyUnusualResults() struct{ a string }
}

// MoqReduced holds the state of a moq of the Reduced_reduced type
type MoqReduced struct {
	Moq *MoqReduced_mock

	Moq_Usual *impl.Moq[
		*MoqReduced_Usual_adaptor,
		MoqReduced_Usual_params,
		MoqReduced_Usual_paramsKey,
		MoqReduced_Usual_results,
	]
	Moq_ReallyUnusualParams *impl.Moq[
		*MoqReduced_ReallyUnusualParams_adaptor,
		MoqReduced_ReallyUnusualParams_params,
		MoqReduced_ReallyUnusualParams_paramsKey,
		MoqReduced_ReallyUnusualParams_results,
	]
	Moq_ReallyUnusualResults *impl.Moq[
		*MoqReduced_ReallyUnusualResults_adaptor,
		MoqReduced_ReallyUnusualResults_params,
		MoqReduced_ReallyUnusualResults_paramsKey,
		MoqReduced_ReallyUnusualResults_results,
	]

	Runtime MoqReduced_runtime
}

// MoqReduced_mock isolates the mock interface of the Reduced type
type MoqReduced_mock struct {
	Moq *MoqReduced
}

// MoqReduced_recorder isolates the recorder interface of the Reduced type
type MoqReduced_recorder struct {
	Moq *MoqReduced
}

// MoqReduced_runtime holds runtime configuration for the Reduced type
type MoqReduced_runtime struct {
	ParameterIndexing struct {
		Usual                MoqReduced_Usual_paramIndexing
		ReallyUnusualParams  MoqReduced_ReallyUnusualParams_paramIndexing
		ReallyUnusualResults MoqReduced_ReallyUnusualResults_paramIndexing
	}
}

// MoqReduced_Usual_adaptor adapts MoqReduced as needed by the runtime
type MoqReduced_Usual_adaptor struct {
	Moq *MoqReduced
}

// MoqReduced_Usual_params holds the params of the Reduced type
type MoqReduced_Usual_params struct {
	SParam string
	BParam bool
}

// MoqReduced_Usual_paramsKey holds the map key params of the Reduced type
type MoqReduced_Usual_paramsKey struct {
	Params struct {
		SParam string
		BParam bool
	}
	Hashes struct {
		SParam hash.Hash
		BParam hash.Hash
	}
}

// MoqReduced_Usual_results holds the results of the Reduced type
type MoqReduced_Usual_results struct {
	SResult string
	Err     error
}

// MoqReduced_Usual_paramIndexing holds the parameter indexing runtime
// configuration for the Reduced type
type MoqReduced_Usual_paramIndexing struct {
	SParam moq.ParamIndexing
	BParam moq.ParamIndexing
}

// MoqReduced_Usual_doFn defines the type of function needed when calling AndDo
// for the Reduced type
type MoqReduced_Usual_doFn func(sParam string, bParam bool)

// MoqReduced_Usual_doReturnFn defines the type of function needed when calling
// DoReturnResults for the Reduced type
type MoqReduced_Usual_doReturnFn func(sParam string, bParam bool) (sResult string, err error)

// MoqReduced_Usual_recorder routes recorded function calls to the MoqReduced
// moq
type MoqReduced_Usual_recorder struct {
	Recorder *impl.Recorder[
		*MoqReduced_Usual_adaptor,
		MoqReduced_Usual_params,
		MoqReduced_Usual_paramsKey,
		MoqReduced_Usual_results,
	]
}

// MoqReduced_Usual_anyParams isolates the any params functions of the Reduced
// type
type MoqReduced_Usual_anyParams struct {
	Recorder *MoqReduced_Usual_recorder
}

// MoqReduced_ReallyUnusualParams_adaptor adapts MoqReduced as needed by the
// runtime
type MoqReduced_ReallyUnusualParams_adaptor struct {
	Moq *MoqReduced
}

// MoqReduced_ReallyUnusualParams_params holds the params of the Reduced type
type MoqReduced_ReallyUnusualParams_params struct{ Param1 struct{ a string } }

// MoqReduced_ReallyUnusualParams_paramsKey holds the map key params of the
// Reduced type
type MoqReduced_ReallyUnusualParams_paramsKey struct {
	Params struct{ Param1 struct{ a string } }
	Hashes struct{ Param1 hash.Hash }
}

// MoqReduced_ReallyUnusualParams_results holds the results of the Reduced type
type MoqReduced_ReallyUnusualParams_results struct{}

// MoqReduced_ReallyUnusualParams_paramIndexing holds the parameter indexing
// runtime configuration for the Reduced type
type MoqReduced_ReallyUnusualParams_paramIndexing struct {
	Param1 moq.ParamIndexing
}

// MoqReduced_ReallyUnusualParams_doFn defines the type of function needed when
// calling AndDo for the Reduced type
type MoqReduced_ReallyUnusualParams_doFn func(struct{ a string })

// MoqReduced_ReallyUnusualParams_doReturnFn defines the type of function
// needed when calling DoReturnResults for the Reduced type
type MoqReduced_ReallyUnusualParams_doReturnFn func(struct{ a string })

// MoqReduced_ReallyUnusualParams_recorder routes recorded function calls to
// the MoqReduced moq
type MoqReduced_ReallyUnusualParams_recorder struct {
	Recorder *impl.Recorder[
		*MoqReduced_ReallyUnusualParams_adaptor,
		MoqReduced_ReallyUnusualParams_params,
		MoqReduced_ReallyUnusualParams_paramsKey,
		MoqReduced_ReallyUnusualParams_results,
	]
}

// MoqReduced_ReallyUnusualParams_anyParams isolates the any params functions
// of the Reduced type
type MoqReduced_ReallyUnusualParams_anyParams struct {
	Recorder *MoqReduced_ReallyUnusualParams_recorder
}

// MoqReduced_ReallyUnusualResults_adaptor adapts MoqReduced as needed by the
// runtime
type MoqReduced_ReallyUnusualResults_adaptor struct {
	Moq *MoqReduced
}

// MoqReduced_ReallyUnusualResults_params holds the params of the Reduced type
type MoqReduced_ReallyUnusualResults_params struct{}

// MoqReduced_ReallyUnusualResults_paramsKey holds the map key params of the
// Reduced type
type MoqReduced_ReallyUnusualResults_paramsKey struct {
	Params struct{}
	Hashes struct{}
}

// MoqReduced_ReallyUnusualResults_results holds the results of the Reduced
// type
type MoqReduced_ReallyUnusualResults_results struct {
	Result1 struct{ a string }
}

// MoqReduced_ReallyUnusualResults_paramIndexing holds the parameter indexing
// runtime configuration for the Reduced type
type MoqReduced_ReallyUnusualResults_paramIndexing struct{}

// MoqReduced_ReallyUnusualResults_doFn defines the type of function needed
// when calling AndDo for the Reduced type
type MoqReduced_ReallyUnusualResults_doFn func()

// MoqReduced_ReallyUnusualResults_doReturnFn defines the type of function
// needed when calling DoReturnResults for the Reduced type
type MoqReduced_ReallyUnusualResults_doReturnFn func() struct{ a string }

// MoqReduced_ReallyUnusualResults_recorder routes recorded function calls to
// the MoqReduced moq
type MoqReduced_ReallyUnusualResults_recorder struct {
	Recorder *impl.Recorder[
		*MoqReduced_ReallyUnusualResults_adaptor,
		MoqReduced_ReallyUnusualResults_params,
		MoqReduced_ReallyUnusualResults_paramsKey,
		MoqReduced_ReallyUnusualResults_results,
	]
}

// MoqReduced_ReallyUnusualResults_anyParams isolates the any params functions
// of the Reduced type
type MoqReduced_ReallyUnusualResults_anyParams struct {
	Recorder *MoqReduced_ReallyUnusualResults_recorder
}

// NewMoqReduced creates a new moq of the Reduced type
func NewMoqReduced(scene *moq.Scene, config *moq.Config) *MoqReduced {
	adaptor1 := &MoqReduced_Usual_adaptor{}
	adaptor2 := &MoqReduced_ReallyUnusualParams_adaptor{}
	adaptor3 := &MoqReduced_ReallyUnusualResults_adaptor{}
	m := &MoqReduced{
		Moq: &MoqReduced_mock{},

		Moq_Usual: impl.NewMoq[
			*MoqReduced_Usual_adaptor,
			MoqReduced_Usual_params,
			MoqReduced_Usual_paramsKey,
			MoqReduced_Usual_results,
		](scene, adaptor1, config),
		Moq_ReallyUnusualParams: impl.NewMoq[
			*MoqReduced_ReallyUnusualParams_adaptor,
			MoqReduced_ReallyUnusualParams_params,
			MoqReduced_ReallyUnusualParams_paramsKey,
			MoqReduced_ReallyUnusualParams_results,
		](scene, adaptor2, config),
		Moq_ReallyUnusualResults: impl.NewMoq[
			*MoqReduced_ReallyUnusualResults_adaptor,
			MoqReduced_ReallyUnusualResults_params,
			MoqReduced_ReallyUnusualResults_paramsKey,
			MoqReduced_ReallyUnusualResults_results,
		](scene, adaptor3, config),

		Runtime: MoqReduced_runtime{ParameterIndexing: struct {
			Usual                MoqReduced_Usual_paramIndexing
			ReallyUnusualParams  MoqReduced_ReallyUnusualParams_paramIndexing
			ReallyUnusualResults MoqReduced_ReallyUnusualResults_paramIndexing
		}{
			Usual: MoqReduced_Usual_paramIndexing{
				SParam: moq.ParamIndexByValue,
				BParam: moq.ParamIndexByValue,
			},
			ReallyUnusualParams: MoqReduced_ReallyUnusualParams_paramIndexing{
				Param1: moq.ParamIndexByValue,
			},
			ReallyUnusualResults: MoqReduced_ReallyUnusualResults_paramIndexing{},
		}},
	}
	m.Moq.Moq = m

	adaptor1.Moq = m
	adaptor2.Moq = m
	adaptor3.Moq = m

	scene.AddMoq(m)
	return m
}

// Mock returns the mock implementation of the Reduced type
func (m *MoqReduced) Mock() *MoqReduced_mock { return m.Moq }

func (m *MoqReduced_mock) Usual(sParam string, bParam bool) (string, error) {
	m.Moq.Moq_Usual.Scene.T.Helper()
	params := MoqReduced_Usual_params{
		SParam: sParam,
		BParam: bParam,
	}

	var result1 string
	var result2 error
	if result := m.Moq.Moq_Usual.Function(params); result != nil {
		result1 = result.SResult
		result2 = result.Err
	}
	return result1, result2
}

func (m *MoqReduced_mock) ReallyUnusualParams(param1 struct{ a string }) {
	m.Moq.Moq_ReallyUnusualParams.Scene.T.Helper()
	params := MoqReduced_ReallyUnusualParams_params{
		Param1: param1,
	}

	m.Moq.Moq_ReallyUnusualParams.Function(params)
}

func (m *MoqReduced_mock) ReallyUnusualResults() struct{ a string } {
	m.Moq.Moq_ReallyUnusualResults.Scene.T.Helper()
	params := MoqReduced_ReallyUnusualResults_params{}

	var result1 struct{ a string }
	if result := m.Moq.Moq_ReallyUnusualResults.Function(params); result != nil {
		result1 = result.Result1
	}
	return result1
}

// OnCall returns the recorder implementation of the Reduced type
func (m *MoqReduced) OnCall() *MoqReduced_recorder {
	return &MoqReduced_recorder{
		Moq: m,
	}
}

func (m *MoqReduced_recorder) Usual(sParam string, bParam bool) *MoqReduced_Usual_recorder {
	return &MoqReduced_Usual_recorder{
		Recorder: m.Moq.Moq_Usual.OnCall(MoqReduced_Usual_params{
			SParam: sParam,
			BParam: bParam,
		}),
	}
}

func (r *MoqReduced_Usual_recorder) Any() *MoqReduced_Usual_anyParams {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.IsAnyPermitted(true) {
		return nil
	}
	return &MoqReduced_Usual_anyParams{Recorder: r}
}

func (a *MoqReduced_Usual_anyParams) SParam() *MoqReduced_Usual_recorder {
	a.Recorder.Recorder.AnyParam(1)
	return a.Recorder
}

func (a *MoqReduced_Usual_anyParams) BParam() *MoqReduced_Usual_recorder {
	a.Recorder.Recorder.AnyParam(2)
	return a.Recorder
}

func (r *MoqReduced_Usual_recorder) Seq() *MoqReduced_Usual_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.Seq(true, "Seq", true) {
		return nil
	}
	return r
}

func (r *MoqReduced_Usual_recorder) NoSeq() *MoqReduced_Usual_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.Seq(false, "NoSeq", true) {
		return nil
	}
	return r
}

func (r *MoqReduced_Usual_recorder) ReturnResults(sResult string, err error) *MoqReduced_Usual_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	r.Recorder.ReturnResults(MoqReduced_Usual_results{
		SResult: sResult,
		Err:     err,
	})
	return r
}

func (r *MoqReduced_Usual_recorder) AndDo(fn MoqReduced_Usual_doFn) *MoqReduced_Usual_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.AndDo(func(params MoqReduced_Usual_params) {
		fn(params.SParam, params.BParam)
	}, true) {
		return nil
	}
	return r
}

func (r *MoqReduced_Usual_recorder) DoReturnResults(fn MoqReduced_Usual_doReturnFn) *MoqReduced_Usual_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	r.Recorder.DoReturnResults(func(params MoqReduced_Usual_params) *MoqReduced_Usual_results {
		sResult, err := fn(params.SParam, params.BParam)
		return &MoqReduced_Usual_results{
			SResult: sResult,
			Err:     err,
		}
	})
	return r
}

func (r *MoqReduced_Usual_recorder) Repeat(repeaters ...moq.Repeater) *MoqReduced_Usual_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.Repeat(repeaters, true) {
		return nil
	}
	return r
}

func (*MoqReduced_Usual_adaptor) PrettyParams(params MoqReduced_Usual_params) string {
	return fmt.Sprintf("Usual(%#v, %#v)", params.SParam, params.BParam)
}

func (a *MoqReduced_Usual_adaptor) ParamsKey(params MoqReduced_Usual_params, anyParams uint64) MoqReduced_Usual_paramsKey {
	a.Moq.Moq_Usual.Scene.T.Helper()
	sParamUsed, sParamUsedHash := impl.ParamKey(
		params.SParam, 1, a.Moq.Runtime.ParameterIndexing.Usual.SParam, anyParams)
	bParamUsed, bParamUsedHash := impl.ParamKey(
		params.BParam, 2, a.Moq.Runtime.ParameterIndexing.Usual.BParam, anyParams)
	return MoqReduced_Usual_paramsKey{
		Params: struct {
			SParam string
			BParam bool
		}{
			SParam: sParamUsed,
			BParam: bParamUsed,
		},
		Hashes: struct {
			SParam hash.Hash
			BParam hash.Hash
		}{
			SParam: sParamUsedHash,
			BParam: bParamUsedHash,
		},
	}
}

func (m *MoqReduced_recorder) ReallyUnusualParams(param1 struct{ a string }) *MoqReduced_ReallyUnusualParams_recorder {
	return &MoqReduced_ReallyUnusualParams_recorder{
		Recorder: m.Moq.Moq_ReallyUnusualParams.OnCall(MoqReduced_ReallyUnusualParams_params{
			Param1: param1,
		}),
	}
}

func (r *MoqReduced_ReallyUnusualParams_recorder) Any() *MoqReduced_ReallyUnusualParams_anyParams {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.IsAnyPermitted(true) {
		return nil
	}
	return &MoqReduced_ReallyUnusualParams_anyParams{Recorder: r}
}

func (a *MoqReduced_ReallyUnusualParams_anyParams) Param1() *MoqReduced_ReallyUnusualParams_recorder {
	a.Recorder.Recorder.AnyParam(1)
	return a.Recorder
}

func (r *MoqReduced_ReallyUnusualParams_recorder) Seq() *MoqReduced_ReallyUnusualParams_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.Seq(true, "Seq", true) {
		return nil
	}
	return r
}

func (r *MoqReduced_ReallyUnusualParams_recorder) NoSeq() *MoqReduced_ReallyUnusualParams_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.Seq(false, "NoSeq", true) {
		return nil
	}
	return r
}

func (r *MoqReduced_ReallyUnusualParams_recorder) ReturnResults() *MoqReduced_ReallyUnusualParams_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	r.Recorder.ReturnResults(MoqReduced_ReallyUnusualParams_results{})
	return r
}

func (r *MoqReduced_ReallyUnusualParams_recorder) AndDo(fn MoqReduced_ReallyUnusualParams_doFn) *MoqReduced_ReallyUnusualParams_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.AndDo(func(params MoqReduced_ReallyUnusualParams_params) {
		fn(params.Param1)
	}, true) {
		return nil
	}
	return r
}

func (r *MoqReduced_ReallyUnusualParams_recorder) DoReturnResults(fn MoqReduced_ReallyUnusualParams_doReturnFn) *MoqReduced_ReallyUnusualParams_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	r.Recorder.DoReturnResults(func(params MoqReduced_ReallyUnusualParams_params) *MoqReduced_ReallyUnusualParams_results {
		fn(params.Param1)
		return &MoqReduced_ReallyUnusualParams_results{}
	})
	return r
}

func (r *MoqReduced_ReallyUnusualParams_recorder) Repeat(repeaters ...moq.Repeater) *MoqReduced_ReallyUnusualParams_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.Repeat(repeaters, true) {
		return nil
	}
	return r
}

func (*MoqReduced_ReallyUnusualParams_adaptor) PrettyParams(params MoqReduced_ReallyUnusualParams_params) string {
	return fmt.Sprintf("ReallyUnusualParams(%#v)", params.Param1)
}

func (a *MoqReduced_ReallyUnusualParams_adaptor) ParamsKey(params MoqReduced_ReallyUnusualParams_params, anyParams uint64) MoqReduced_ReallyUnusualParams_paramsKey {
	a.Moq.Moq_ReallyUnusualParams.Scene.T.Helper()
	param1Used, param1UsedHash := impl.ParamKey(
		params.Param1, 1, a.Moq.Runtime.ParameterIndexing.ReallyUnusualParams.Param1, anyParams)
	return MoqReduced_ReallyUnusualParams_paramsKey{
		Params: struct{ Param1 struct{ a string } }{
			Param1: param1Used,
		},
		Hashes: struct{ Param1 hash.Hash }{
			Param1: param1UsedHash,
		},
	}
}

func (m *MoqReduced_recorder) ReallyUnusualResults() *MoqReduced_ReallyUnusualResults_recorder {
	return &MoqReduced_ReallyUnusualResults_recorder{
		Recorder: m.Moq.Moq_ReallyUnusualResults.OnCall(MoqReduced_ReallyUnusualResults_params{}),
	}
}

func (r *MoqReduced_ReallyUnusualResults_recorder) Any() *MoqReduced_ReallyUnusualResults_anyParams {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.IsAnyPermitted(true) {
		return nil
	}
	return &MoqReduced_ReallyUnusualResults_anyParams{Recorder: r}
}

func (r *MoqReduced_ReallyUnusualResults_recorder) Seq() *MoqReduced_ReallyUnusualResults_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.Seq(true, "Seq", true) {
		return nil
	}
	return r
}

func (r *MoqReduced_ReallyUnusualResults_recorder) NoSeq() *MoqReduced_ReallyUnusualResults_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.Seq(false, "NoSeq", true) {
		return nil
	}
	return r
}

func (r *MoqReduced_ReallyUnusualResults_recorder) ReturnResults(result1 struct{ a string }) *MoqReduced_ReallyUnusualResults_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	r.Recorder.ReturnResults(MoqReduced_ReallyUnusualResults_results{
		Result1: result1,
	})
	return r
}

func (r *MoqReduced_ReallyUnusualResults_recorder) AndDo(fn MoqReduced_ReallyUnusualResults_doFn) *MoqReduced_ReallyUnusualResults_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.AndDo(func(params MoqReduced_ReallyUnusualResults_params) {
		fn()
	}, true) {
		return nil
	}
	return r
}

func (r *MoqReduced_ReallyUnusualResults_recorder) DoReturnResults(fn MoqReduced_ReallyUnusualResults_doReturnFn) *MoqReduced_ReallyUnusualResults_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	r.Recorder.DoReturnResults(func(params MoqReduced_ReallyUnusualResults_params) *MoqReduced_ReallyUnusualResults_results {
		result1 := fn()
		return &MoqReduced_ReallyUnusualResults_results{
			Result1: result1,
		}
	})
	return r
}

func (r *MoqReduced_ReallyUnusualResults_recorder) Repeat(repeaters ...moq.Repeater) *MoqReduced_ReallyUnusualResults_recorder {
	r.Recorder.Moq.Scene.T.Helper()
	if !r.Recorder.Repeat(repeaters, true) {
		return nil
	}
	return r
}

func (*MoqReduced_ReallyUnusualResults_adaptor) PrettyParams(params MoqReduced_ReallyUnusualResults_params) string {
	return fmt.Sprintf("ReallyUnusualResults()")
}

func (a *MoqReduced_ReallyUnusualResults_adaptor) ParamsKey(params MoqReduced_ReallyUnusualResults_params, anyParams uint64) MoqReduced_ReallyUnusualResults_paramsKey {
	a.Moq.Moq_ReallyUnusualResults.Scene.T.Helper()
	return MoqReduced_ReallyUnusualResults_paramsKey{
		Params: struct{}{},
		Hashes: struct{}{},
	}
}

// Reset resets the state of the moq
func (m *MoqReduced) Reset() {
	m.Moq_Usual.Reset()
	m.Moq_ReallyUnusualParams.Reset()
	m.Moq_ReallyUnusualResults.Reset()
}

// AssertExpectationsMet asserts that all expectations have been met
func (m *MoqReduced) AssertExpectationsMet() {
	m.Moq_Usual.Scene.T.Helper()
	m.Moq_Usual.AssertExpectationsMet()
	m.Moq_ReallyUnusualParams.AssertExpectationsMet()
	m.Moq_ReallyUnusualResults.AssertExpectationsMet()
}
